syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "hal-cinema/api/v1";

service APIService {
  rpc CreateSchedule(CreateScheduleRequest) returns (CreateScheduleResponse) {
    option (google.api.http) = {
      post: "/v1/schedules"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Schedules"]
      summary: "Create schedule"
      description: "Create schedule"
    };
  }

  rpc GetSchedules(GetSchedulesRequest) returns (GetSchedulesResponse) {
    option (google.api.http) = {get: "/v1/schedules"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Schedules"]
      summary: "Get all schedules"
      description: "Get all schedules"
    };
  }

  rpc UpdateSchedule(UpdateScheduleRequest) returns (UpdateScheduleResponse) {
    option (google.api.http) = {
      put: "/v1/schedules/{schedule_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Schedules"]
      summary: "Update schedule"
      description: "Update schedule"
    };
  }

  rpc DeleteSchedule(DeleteScheduleRequest) returns (DeleteScheduleResponse) {
    option (google.api.http) = {delete: "/v1/schedules/{schedule_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Schedules"]
      summary: "Delete schedule"
      description: "Delete schedule"
    };
  }

  // multipart/form-dataにする
  rpc CreateMovie(CreateMovieRequest) returns (CreateMovieResponse) {
    option (google.api.http) = {
      post: "/v1/movies"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Movies"]
      summary: "Create movie"
      description: "Create movie"
    };
  }

  // multipart/form-dataにする
  rpc GetMovies(GetMoviesRequest) returns (GetMoviesResponse) {
    option (google.api.http) = {get: "/v1/movies"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Movies"]
      summary: "Get all movies"
      description: "Get all movies"
    };
  }

  // multipart/form-dataにする
  rpc GetMovie(GetMovieRequest) returns (GetMovieResponse) {
    option (google.api.http) = {get: "/v1/movies/{movie_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Movies"]
      summary: "Get movie details"
      description: "Get movie details"
    };
  }

  // multipart/form-dataにする
  rpc UpdateMovie(UpdateMovieRequest) returns (UpdateMovieResponse) {
    option (google.api.http) = {
      put: "/v1/movies/{movie_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Movies"]
      summary: "Update movie"
      description: "Update movie"
    };
  }

  rpc DeleteMovie(DeleteMovieRequest) returns (DeleteMovieResponse) {
    option (google.api.http) = {delete: "/v1/movies/{movie_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Movies"]
      summary: "Delete movie"
      description: "Delete movie"
    };
  }

  rpc GoogleLogin(GoogleLoginRequest) returns (GoogleLoginResponse) {
    option (google.api.http) = {
      post: "/login/google"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Login"]
      summary: "Google Login"
      description: "Google Login"
    };
  }

  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/v1/users"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "Get user"
      description: "Get user"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {get: "/v1/users/{user_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "Get user"
      description: "Get user"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/{user_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "Update user"
      description: "Update user"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {delete: "/v1/users/{user_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "Delete user"
      description: "Delete user"
    };
  }

  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (google.api.http) = {
      post: "/v1/orders"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Orders"]
      summary: "Create order"
      description: "Create order"
    };
  }

  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {
    option (google.api.http) = {get: "/v1/orders"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Orders"]
      summary: "Get all orders"
      description: "Get all orders"
    };
  }

  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (google.api.http) = {get: "/v1/orders/{order_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Orders"]
      summary: "Get order"
      description: "Get order"
    };
  }

  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse) {
    option (google.api.http) = {delete: "/v1/orders/{order_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Orders"]
      summary: "Delete order"
      description: "Delete order"
    };
  }

  rpc CreateSeatReservation(CreateSeatReservationRequest) returns (CreateSeatReservationResponse) {
    option (google.api.http) = {
      post: "/v1/reservations"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Reservations"]
      summary: "Create reservation"
      description: "Create reservation"
    };
  }

  rpc DeleteSeatReservation(DeleteSeatReservationRequest) returns (DeleteSeatReservationResponse) {
    option (google.api.http) = {delete: "/v1/reservations/{theater_seat_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Reservations"]
      summary: "Delete reservation"
      description: "Delete reservation"
    };
  }
  rpc UpdateTheaterSeat(UpdateTheaterSeatRequest) returns (UpdateTheaterSeatResponse) {
    option (google.api.http) = {
      put: "/v1/theater_seats/{theater_seat_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["TheaterSeats"]
      summary: "Update theater seat"
      description: "Update theater seat"
    };
  }
  rpc GetTheaterSeatsByID(GetTheaterSeatsRequest) returns (GetTheaterSeatsResponse) {
    option (google.api.http) = {get: "/v1/theater_seats/{order_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["TheaterSeats"]
      summary: "Get theater seat"
      description: "Get theater seat"
    };
  }
}

message GetTheaterSeatsRequest {
  string order_id = 1;
}

message GetTheaterSeatsResponse {
  string order_id = 1;
  repeated string seat = 2;
}

message UpdateTheaterSeatRequest {
  string theater_seat_id = 1;
  repeated Seat seats = 2;
}
message Seat {
  string key = 1;
  string name = 2;
}

message UpdateTheaterSeatResponse {
  string theater_seat_id = 1;
}

message CreateScheduleRequest {
  string movie_id = 1;
  int32 theater_id = 2;
  string start_time = 3;
}

message CreateScheduleResponse {
  string schedule_id = 1;
}

message GetSchedulesRequest {
  string start_date = 1;
  string movie_id = 2;
}

message GetSchedulesResponse {
  string selected_date = 1;
  string selected_movies = 2;
  repeated GetScheduleResult schedule = 3;
}

message GetScheduleResult {
  string schedule_id = 1;
  string movie_id = 2;
  string movie_name = 3;
  string theater = 4;
  string start_time = 5;
  string end_time = 6;
  bool is_available = 7;
}

message UpdateScheduleRequest {
  string schedule_id = 1;
  string movie_id = 2;
  string theater_id = 3;
  string start_time = 4;
}

message UpdateScheduleResponse {
  string schedule_id = 1;
}

message DeleteScheduleRequest {
  string schedule_id = 1;
}

message DeleteScheduleResponse {
  string schedule_id = 1;
}

message CreateMovieRequest {
  string movie_name = 1;
  string director = 2;
  string summary = 3;
  bytes thumbnail = 4;
  string link = 5;
  int32 term = 6;
  string release_date = 7;
  string end_date = 8;
  repeated bytes movie_image = 9;
}

message CreateMovieResponse {
  string movie_id = 1;
}

message GetMoviesRequest {
  int64 page_id = 1;
  int64 page_size = 2;
}

message GetMoviesResponse {
  repeated Movie movie = 1;
}

message GetMovieRequest {
  string movie_id = 1;
}

message GetMovieResponse {
  Movie movie = 1;
}

// multipart/form-dataにする
message UpdateMovieRequest {
  string movie_id = 1;
  string movie_name = 2;
  string director = 3;
  string summary = 4;
  bytes thumbnail = 5;
  string link = 6;
  int32 term = 7;
  string release_date = 8;
  string end_date = 9;
  repeated bytes movie_image = 10;
}

message UpdateMovieResponse {
  string movie_id = 1;
}

message DeleteMovieRequest {
  string movie_id = 1;
}

message DeleteMovieResponse {
  string movie_id = 1;
}

message GoogleLoginRequest {
  string code = 1;
}

message GoogleLoginResponse {
  string user_id = 1;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUsersRequest {
  string page_id = 1;
  string page_size = 2;
}

message GetUsersResponse {
  repeated User user = 1;
}

message UpdateUserRequest {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string first_name_reading = 4;
  string last_name_reading = 5;
  int32 gender = 6;
}

message UpdateUserResponse {
  string user_id = 1;
}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {
  string user_id = 1;
}

message CreateOrderRequest {
  string schedule_id = 1;
  repeated SeatSelect seat_selects = 2;
}

message SeatSelect {
  string seat_name = 1;
  int32 price_type = 2;
}

message CreateOrderResponse {
  string order_id = 1;
}

message GetOrdersRequest {
  string user_id = 1;
}

message GetOrdersResponse {
  repeated Orders order = 2;
}

message GetOrderRequest {
  string order_id = 1;
}

message GetOrderResponse {
  string movie_id = 1;
  string movie_name = 2;
  int32 theater_id = 3;
  string theater_name = 4;
  string screening_datetime = 5;
  string total_price = 6;
  repeated SeatDetail seat_details = 7;
  MiniUser user = 8;
}

message MiniUser {
  string user_id = 1;
  string user_name = 2;
  string user_name_kana = 3;
  string email = 4;
}

message SeatDetail {
  string theater_seat_id = 1;
  string seat_name = 2;
  string price_type = 3;
  int32 price = 4;
}

message DeleteOrderRequest {
  string order_id = 1;
}

message DeleteOrderResponse {
  string order_id = 1;
}

message CreateSeatReservationRequest {
  string schedule_id = 1;
  string user_id = 2;
  repeated string seat_id = 3;
}

message CreateSeatReservationResponse {
  string theater_seat_id = 1;
}

message DeleteSeatReservationRequest {
  string theater_seat_id = 1;
}

message DeleteSeatReservationResponse {
  string theater_seat_id = 1;
}

message Orders {
  string order_id = 1;
  string user_id = 2;
  string movie_name = 3;
  string screen = 4;
  repeated OrdersDetail order_detail = 5;
}

message OrdersDetail {
  string seat_name = 1;
  string price_type = 2;
  int32 price = 3;
}

message User {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string first_name_reading = 4;
  string last_name_reading = 5;
  int32 gender = 6;
}

message Movie {
  string movie_id = 1;
  string movie_name = 2;
  string director = 3;
  bytes thumbnail = 4;
  string summary = 5;
  string link = 6;
  int32 term = 7;
  string release_date = 8;
  string end_date = 9;
  repeated bytes movie_image = 10;
}

message Schedule {
  string schedule_id = 1;
  string movie_name = 2;
  string theater_id = 3;
  string start_time = 4;
  int32 term = 5;
  bool is_full = 6;
}
