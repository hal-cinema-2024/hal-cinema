services:
  postgres:
    build:
      context: .docker/postgres
      dockerfile: Dockerfile
    volumes:
      - .docker/data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hal_cinema

  migrate:
    build:
      context: .docker/migrate
      dockerfile: Dockerfile
    restart: "no"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=hal_cinema
    volumes:
    - ./:/migrate
    depends_on:
      - postgres

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - .docker/metric/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml",""]
    volumes:
      - .docker/metric/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - zipkin-all-in-one

  backend:
    build:
      context: .docker/app
      dockerfile: local.Dockerfile
    platform: linux/amd64
    ports:
      - 8080:8080
    volumes:
      - ./:/app
    depends_on:
      - migrate
      - otel-collector
  