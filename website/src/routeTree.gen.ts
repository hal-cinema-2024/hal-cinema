/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const SchedulesRouteLazyImport = createFileRoute("/schedules")();
const ReservedRouteLazyImport = createFileRoute("/reserved")();
const ProfileRouteLazyImport = createFileRoute("/profile")();
const MoviesRouteLazyImport = createFileRoute("/movies")();
const HomeRouteLazyImport = createFileRoute("/_home")();
const MoviesMovieIdRouteLazyImport = createFileRoute("/movies/$movieId")();
const GoogleCallbackRouteLazyImport = createFileRoute("/google/callback")();

// Create/Update Routes

const SchedulesRouteLazyRoute = SchedulesRouteLazyImport.update({
  path: "/schedules",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/schedules/route.lazy").then((d) => d.Route)
);

const ReservedRouteLazyRoute = ReservedRouteLazyImport.update({
  path: "/reserved",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/reserved/route.lazy").then((d) => d.Route)
);

const ProfileRouteLazyRoute = ProfileRouteLazyImport.update({
  path: "/profile",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/profile/route.lazy").then((d) => d.Route)
);

const MoviesRouteLazyRoute = MoviesRouteLazyImport.update({
  path: "/movies",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/movies/route.lazy").then((d) => d.Route));

const HomeRouteLazyRoute = HomeRouteLazyImport.update({
  id: "/_home",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/_home/route.lazy").then((d) => d.Route));

const MoviesMovieIdRouteLazyRoute = MoviesMovieIdRouteLazyImport.update({
  path: "/$movieId",
  getParentRoute: () => MoviesRouteLazyRoute,
} as any).lazy(() =>
  import("./routes/movies/$movieId/route.lazy").then((d) => d.Route)
);

const GoogleCallbackRouteLazyRoute = GoogleCallbackRouteLazyImport.update({
  path: "/google/callback",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/google/callback/route.lazy").then((d) => d.Route)
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_home": {
      id: "/_home";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof HomeRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/movies": {
      id: "/movies";
      path: "/movies";
      fullPath: "/movies";
      preLoaderRoute: typeof MoviesRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/profile": {
      id: "/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/reserved": {
      id: "/reserved";
      path: "/reserved";
      fullPath: "/reserved";
      preLoaderRoute: typeof ReservedRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/schedules": {
      id: "/schedules";
      path: "/schedules";
      fullPath: "/schedules";
      preLoaderRoute: typeof SchedulesRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/google/callback": {
      id: "/google/callback";
      path: "/google/callback";
      fullPath: "/google/callback";
      preLoaderRoute: typeof GoogleCallbackRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/movies/$movieId": {
      id: "/movies/$movieId";
      path: "/$movieId";
      fullPath: "/movies/$movieId";
      preLoaderRoute: typeof MoviesMovieIdRouteLazyImport;
      parentRoute: typeof MoviesRouteLazyImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  HomeRouteLazyRoute,
  MoviesRouteLazyRoute: MoviesRouteLazyRoute.addChildren({
    MoviesMovieIdRouteLazyRoute,
  }),
  ProfileRouteLazyRoute,
  ReservedRouteLazyRoute,
  SchedulesRouteLazyRoute,
  GoogleCallbackRouteLazyRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_home",
        "/movies",
        "/profile",
        "/reserved",
        "/schedules",
        "/google/callback"
      ]
    },
    "/_home": {
      "filePath": "_home/route.lazy.tsx"
    },
    "/movies": {
      "filePath": "movies/route.lazy.tsx",
      "children": [
        "/movies/$movieId"
      ]
    },
    "/profile": {
      "filePath": "profile/route.lazy.tsx"
    },
    "/reserved": {
      "filePath": "reserved/route.lazy.tsx"
    },
    "/schedules": {
      "filePath": "schedules/route.lazy.tsx"
    },
    "/google/callback": {
      "filePath": "google/callback/route.lazy.tsx"
    },
    "/movies/$movieId": {
      "filePath": "movies/$movieId/route.lazy.tsx",
      "parent": "/movies"
    }
  }
}
ROUTE_MANIFEST_END */
