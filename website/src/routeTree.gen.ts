/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SchedulescomponentsDaliyImport } from './routes/schedules/ components/daliy'
import { Route as SchedulescomponentsTimeDataImport } from './routes/schedules/ components/TimeData'
import { Route as SchedulescomponentsSlideshowImport } from './routes/schedules/ components/Slideshow'
import { Route as SchedulescomponentsScreenTimeImport } from './routes/schedules/ components/ScreenTime'
import { Route as SchedulescomponentsScreenDataImport } from './routes/schedules/ components/ScreenData'
import { Route as SchedulescomponentsMovieBoxImport } from './routes/schedules/ components/MovieBox'
import { Route as SchedulescomponentsDateDispImport } from './routes/schedules/ components/DateDisp'
import { Route as ReservedComponentsStepperImport } from './routes/reserved/components/Stepper'
import { Route as ReservedComponentsPaymentInfoImport } from './routes/reserved/components/PaymentInfo'
import { Route as ReservedComponentsCustomerInfoImport } from './routes/reserved/components/CustomerInfo'
import { Route as ReservedComponentsBuyContentImport } from './routes/reserved/components/BuyContent'
import { Route as ProfileComponentsProfileCardImport } from './routes/profile/components/ProfileCard'
import { Route as ProfileComponentsMovieCardImport } from './routes/profile/components/MovieCard'
import { Route as MoviesComponentPagenationImport } from './routes/movies/component/Pagenation'
import { Route as MoviesComponentMoviesDateImport } from './routes/movies/component/MoviesDate'
import { Route as MoviesComponentMoviesImport } from './routes/movies/component/Movies'
import { Route as HomeComponentsTopImport } from './routes/_home/components/Top'
import { Route as MoviesMovieIdComponentMovieImport } from './routes/movies/$movieId/component/movie'
import { Route as GoogleCallbackStoreUserDataContextImport } from './routes/google/callback/store/UserDataContext'
import { Route as GoogleCallbackComponentsLoginButtonImport } from './routes/google/callback/components/LoginButton'

// Create Virtual Routes

const NotfoundLazyImport = createFileRoute('/notfound')()
const SchedulesRouteLazyImport = createFileRoute('/schedules')()
const ReservedRouteLazyImport = createFileRoute('/reserved')()
const ProfileRouteLazyImport = createFileRoute('/profile')()
const MoviesRouteLazyImport = createFileRoute('/movies')()
const HomeRouteLazyImport = createFileRoute('/_home')()
const MoviesMovieIdRouteLazyImport = createFileRoute('/movies/$movieId')()
const GoogleCallbackRouteLazyImport = createFileRoute('/google/callback')()

// Create/Update Routes

const NotfoundLazyRoute = NotfoundLazyImport.update({
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notfound.lazy').then((d) => d.Route))

const SchedulesRouteLazyRoute = SchedulesRouteLazyImport.update({
  path: '/schedules',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/schedules/route.lazy').then((d) => d.Route),
)

const ReservedRouteLazyRoute = ReservedRouteLazyImport.update({
  path: '/reserved',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/reserved/route.lazy').then((d) => d.Route),
)

const ProfileRouteLazyRoute = ProfileRouteLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/route.lazy').then((d) => d.Route))

const MoviesRouteLazyRoute = MoviesRouteLazyImport.update({
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies/route.lazy').then((d) => d.Route))

const HomeRouteLazyRoute = HomeRouteLazyImport.update({
  id: '/_home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_home/route.lazy').then((d) => d.Route))

const MoviesMovieIdRouteLazyRoute = MoviesMovieIdRouteLazyImport.update({
  path: '/$movieId',
  getParentRoute: () => MoviesRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/movies/$movieId/route.lazy').then((d) => d.Route),
)

const GoogleCallbackRouteLazyRoute = GoogleCallbackRouteLazyImport.update({
  path: '/google/callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/google/callback/route.lazy').then((d) => d.Route),
)

const SchedulescomponentsDaliyRoute = SchedulescomponentsDaliyImport.update({
  path: '/ components/daliy',
  getParentRoute: () => SchedulesRouteLazyRoute,
} as any)

const SchedulescomponentsTimeDataRoute =
  SchedulescomponentsTimeDataImport.update({
    path: '/ components/TimeData',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const SchedulescomponentsSlideshowRoute =
  SchedulescomponentsSlideshowImport.update({
    path: '/ components/Slideshow',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const SchedulescomponentsScreenTimeRoute =
  SchedulescomponentsScreenTimeImport.update({
    path: '/ components/ScreenTime',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const SchedulescomponentsScreenDataRoute =
  SchedulescomponentsScreenDataImport.update({
    path: '/ components/ScreenData',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const SchedulescomponentsMovieBoxRoute =
  SchedulescomponentsMovieBoxImport.update({
    path: '/ components/MovieBox',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const SchedulescomponentsDateDispRoute =
  SchedulescomponentsDateDispImport.update({
    path: '/ components/DateDisp',
    getParentRoute: () => SchedulesRouteLazyRoute,
  } as any)

const ReservedComponentsStepperRoute = ReservedComponentsStepperImport.update({
  path: '/components/Stepper',
  getParentRoute: () => ReservedRouteLazyRoute,
} as any)

const ReservedComponentsPaymentInfoRoute =
  ReservedComponentsPaymentInfoImport.update({
    path: '/components/PaymentInfo',
    getParentRoute: () => ReservedRouteLazyRoute,
  } as any)

const ReservedComponentsCustomerInfoRoute =
  ReservedComponentsCustomerInfoImport.update({
    path: '/components/CustomerInfo',
    getParentRoute: () => ReservedRouteLazyRoute,
  } as any)

const ReservedComponentsBuyContentRoute =
  ReservedComponentsBuyContentImport.update({
    path: '/components/BuyContent',
    getParentRoute: () => ReservedRouteLazyRoute,
  } as any)

const ProfileComponentsProfileCardRoute =
  ProfileComponentsProfileCardImport.update({
    path: '/components/ProfileCard',
    getParentRoute: () => ProfileRouteLazyRoute,
  } as any)

const ProfileComponentsMovieCardRoute = ProfileComponentsMovieCardImport.update(
  {
    path: '/components/MovieCard',
    getParentRoute: () => ProfileRouteLazyRoute,
  } as any,
)

const MoviesComponentPagenationRoute = MoviesComponentPagenationImport.update({
  path: '/component/Pagenation',
  getParentRoute: () => MoviesRouteLazyRoute,
} as any)

const MoviesComponentMoviesDateRoute = MoviesComponentMoviesDateImport.update({
  path: '/component/MoviesDate',
  getParentRoute: () => MoviesRouteLazyRoute,
} as any)

const MoviesComponentMoviesRoute = MoviesComponentMoviesImport.update({
  path: '/component/Movies',
  getParentRoute: () => MoviesRouteLazyRoute,
} as any)

const HomeComponentsTopRoute = HomeComponentsTopImport.update({
  path: '/components/Top',
  getParentRoute: () => HomeRouteLazyRoute,
} as any)

const MoviesMovieIdComponentMovieRoute =
  MoviesMovieIdComponentMovieImport.update({
    path: '/component/movie',
    getParentRoute: () => MoviesMovieIdRouteLazyRoute,
  } as any)

const GoogleCallbackStoreUserDataContextRoute =
  GoogleCallbackStoreUserDataContextImport.update({
    path: '/store/UserDataContext',
    getParentRoute: () => GoogleCallbackRouteLazyRoute,
  } as any)

const GoogleCallbackComponentsLoginButtonRoute =
  GoogleCallbackComponentsLoginButtonImport.update({
    path: '/components/LoginButton',
    getParentRoute: () => GoogleCallbackRouteLazyRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/reserved': {
      id: '/reserved'
      path: '/reserved'
      fullPath: '/reserved'
      preLoaderRoute: typeof ReservedRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/schedules': {
      id: '/schedules'
      path: '/schedules'
      fullPath: '/schedules'
      preLoaderRoute: typeof SchedulesRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/google/callback': {
      id: '/google/callback'
      path: '/google/callback'
      fullPath: '/google/callback'
      preLoaderRoute: typeof GoogleCallbackRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies/$movieId': {
      id: '/movies/$movieId'
      path: '/$movieId'
      fullPath: '/movies/$movieId'
      preLoaderRoute: typeof MoviesMovieIdRouteLazyImport
      parentRoute: typeof MoviesRouteLazyImport
    }
    '/_home/components/Top': {
      id: '/_home/components/Top'
      path: '/components/Top'
      fullPath: '/components/Top'
      preLoaderRoute: typeof HomeComponentsTopImport
      parentRoute: typeof HomeRouteLazyImport
    }
    '/movies/component/Movies': {
      id: '/movies/component/Movies'
      path: '/component/Movies'
      fullPath: '/movies/component/Movies'
      preLoaderRoute: typeof MoviesComponentMoviesImport
      parentRoute: typeof MoviesRouteLazyImport
    }
    '/movies/component/MoviesDate': {
      id: '/movies/component/MoviesDate'
      path: '/component/MoviesDate'
      fullPath: '/movies/component/MoviesDate'
      preLoaderRoute: typeof MoviesComponentMoviesDateImport
      parentRoute: typeof MoviesRouteLazyImport
    }
    '/movies/component/Pagenation': {
      id: '/movies/component/Pagenation'
      path: '/component/Pagenation'
      fullPath: '/movies/component/Pagenation'
      preLoaderRoute: typeof MoviesComponentPagenationImport
      parentRoute: typeof MoviesRouteLazyImport
    }
    '/profile/components/MovieCard': {
      id: '/profile/components/MovieCard'
      path: '/components/MovieCard'
      fullPath: '/profile/components/MovieCard'
      preLoaderRoute: typeof ProfileComponentsMovieCardImport
      parentRoute: typeof ProfileRouteLazyImport
    }
    '/profile/components/ProfileCard': {
      id: '/profile/components/ProfileCard'
      path: '/components/ProfileCard'
      fullPath: '/profile/components/ProfileCard'
      preLoaderRoute: typeof ProfileComponentsProfileCardImport
      parentRoute: typeof ProfileRouteLazyImport
    }
    '/reserved/components/BuyContent': {
      id: '/reserved/components/BuyContent'
      path: '/components/BuyContent'
      fullPath: '/reserved/components/BuyContent'
      preLoaderRoute: typeof ReservedComponentsBuyContentImport
      parentRoute: typeof ReservedRouteLazyImport
    }
    '/reserved/components/CustomerInfo': {
      id: '/reserved/components/CustomerInfo'
      path: '/components/CustomerInfo'
      fullPath: '/reserved/components/CustomerInfo'
      preLoaderRoute: typeof ReservedComponentsCustomerInfoImport
      parentRoute: typeof ReservedRouteLazyImport
    }
    '/reserved/components/PaymentInfo': {
      id: '/reserved/components/PaymentInfo'
      path: '/components/PaymentInfo'
      fullPath: '/reserved/components/PaymentInfo'
      preLoaderRoute: typeof ReservedComponentsPaymentInfoImport
      parentRoute: typeof ReservedRouteLazyImport
    }
    '/reserved/components/Stepper': {
      id: '/reserved/components/Stepper'
      path: '/components/Stepper'
      fullPath: '/reserved/components/Stepper'
      preLoaderRoute: typeof ReservedComponentsStepperImport
      parentRoute: typeof ReservedRouteLazyImport
    }
    '/schedules/ components/DateDisp': {
      id: '/schedules/ components/DateDisp'
      path: '/ components/DateDisp'
      fullPath: '/schedules/ components/DateDisp'
      preLoaderRoute: typeof SchedulescomponentsDateDispImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/MovieBox': {
      id: '/schedules/ components/MovieBox'
      path: '/ components/MovieBox'
      fullPath: '/schedules/ components/MovieBox'
      preLoaderRoute: typeof SchedulescomponentsMovieBoxImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/ScreenData': {
      id: '/schedules/ components/ScreenData'
      path: '/ components/ScreenData'
      fullPath: '/schedules/ components/ScreenData'
      preLoaderRoute: typeof SchedulescomponentsScreenDataImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/ScreenTime': {
      id: '/schedules/ components/ScreenTime'
      path: '/ components/ScreenTime'
      fullPath: '/schedules/ components/ScreenTime'
      preLoaderRoute: typeof SchedulescomponentsScreenTimeImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/Slideshow': {
      id: '/schedules/ components/Slideshow'
      path: '/ components/Slideshow'
      fullPath: '/schedules/ components/Slideshow'
      preLoaderRoute: typeof SchedulescomponentsSlideshowImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/TimeData': {
      id: '/schedules/ components/TimeData'
      path: '/ components/TimeData'
      fullPath: '/schedules/ components/TimeData'
      preLoaderRoute: typeof SchedulescomponentsTimeDataImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/schedules/ components/daliy': {
      id: '/schedules/ components/daliy'
      path: '/ components/daliy'
      fullPath: '/schedules/ components/daliy'
      preLoaderRoute: typeof SchedulescomponentsDaliyImport
      parentRoute: typeof SchedulesRouteLazyImport
    }
    '/google/callback/components/LoginButton': {
      id: '/google/callback/components/LoginButton'
      path: '/components/LoginButton'
      fullPath: '/google/callback/components/LoginButton'
      preLoaderRoute: typeof GoogleCallbackComponentsLoginButtonImport
      parentRoute: typeof GoogleCallbackRouteLazyImport
    }
    '/google/callback/store/UserDataContext': {
      id: '/google/callback/store/UserDataContext'
      path: '/store/UserDataContext'
      fullPath: '/google/callback/store/UserDataContext'
      preLoaderRoute: typeof GoogleCallbackStoreUserDataContextImport
      parentRoute: typeof GoogleCallbackRouteLazyImport
    }
    '/movies/$movieId/component/movie': {
      id: '/movies/$movieId/component/movie'
      path: '/component/movie'
      fullPath: '/movies/$movieId/component/movie'
      preLoaderRoute: typeof MoviesMovieIdComponentMovieImport
      parentRoute: typeof MoviesMovieIdRouteLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  HomeRouteLazyRoute: HomeRouteLazyRoute.addChildren({
    HomeComponentsTopRoute,
  }),
  MoviesRouteLazyRoute: MoviesRouteLazyRoute.addChildren({
    MoviesMovieIdRouteLazyRoute: MoviesMovieIdRouteLazyRoute.addChildren({
      MoviesMovieIdComponentMovieRoute,
    }),
    MoviesComponentMoviesRoute,
    MoviesComponentMoviesDateRoute,
    MoviesComponentPagenationRoute,
  }),
  ProfileRouteLazyRoute: ProfileRouteLazyRoute.addChildren({
    ProfileComponentsMovieCardRoute,
    ProfileComponentsProfileCardRoute,
  }),
  ReservedRouteLazyRoute: ReservedRouteLazyRoute.addChildren({
    ReservedComponentsBuyContentRoute,
    ReservedComponentsCustomerInfoRoute,
    ReservedComponentsPaymentInfoRoute,
    ReservedComponentsStepperRoute,
  }),
  SchedulesRouteLazyRoute: SchedulesRouteLazyRoute.addChildren({
    SchedulescomponentsDateDispRoute,
    SchedulescomponentsMovieBoxRoute,
    SchedulescomponentsScreenDataRoute,
    SchedulescomponentsScreenTimeRoute,
    SchedulescomponentsSlideshowRoute,
    SchedulescomponentsTimeDataRoute,
    SchedulescomponentsDaliyRoute,
  }),
  NotfoundLazyRoute,
  GoogleCallbackRouteLazyRoute: GoogleCallbackRouteLazyRoute.addChildren({
    GoogleCallbackComponentsLoginButtonRoute,
    GoogleCallbackStoreUserDataContextRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_home",
        "/movies",
        "/profile",
        "/reserved",
        "/schedules",
        "/notfound",
        "/google/callback"
      ]
    },
    "/_home": {
      "filePath": "_home/route.lazy.tsx",
      "children": [
        "/_home/components/Top"
      ]
    },
    "/movies": {
      "filePath": "movies/route.lazy.tsx",
      "children": [
        "/movies/$movieId",
        "/movies/component/Movies",
        "/movies/component/MoviesDate",
        "/movies/component/Pagenation"
      ]
    },
    "/profile": {
      "filePath": "profile/route.lazy.tsx",
      "children": [
        "/profile/components/MovieCard",
        "/profile/components/ProfileCard"
      ]
    },
    "/reserved": {
      "filePath": "reserved/route.lazy.tsx",
      "children": [
        "/reserved/components/BuyContent",
        "/reserved/components/CustomerInfo",
        "/reserved/components/PaymentInfo",
        "/reserved/components/Stepper"
      ]
    },
    "/schedules": {
      "filePath": "schedules/route.lazy.tsx",
      "children": [
        "/schedules/ components/DateDisp",
        "/schedules/ components/MovieBox",
        "/schedules/ components/ScreenData",
        "/schedules/ components/ScreenTime",
        "/schedules/ components/Slideshow",
        "/schedules/ components/TimeData",
        "/schedules/ components/daliy"
      ]
    },
    "/notfound": {
      "filePath": "notfound.lazy.tsx"
    },
    "/google/callback": {
      "filePath": "google/callback/route.lazy.tsx",
      "children": [
        "/google/callback/components/LoginButton",
        "/google/callback/store/UserDataContext"
      ]
    },
    "/movies/$movieId": {
      "filePath": "movies/$movieId/route.lazy.tsx",
      "parent": "/movies",
      "children": [
        "/movies/$movieId/component/movie"
      ]
    },
    "/_home/components/Top": {
      "filePath": "_home/components/Top.tsx",
      "parent": "/_home"
    },
    "/movies/component/Movies": {
      "filePath": "movies/component/Movies.tsx",
      "parent": "/movies"
    },
    "/movies/component/MoviesDate": {
      "filePath": "movies/component/MoviesDate.ts",
      "parent": "/movies"
    },
    "/movies/component/Pagenation": {
      "filePath": "movies/component/Pagenation.tsx",
      "parent": "/movies"
    },
    "/profile/components/MovieCard": {
      "filePath": "profile/components/MovieCard.tsx",
      "parent": "/profile"
    },
    "/profile/components/ProfileCard": {
      "filePath": "profile/components/ProfileCard.tsx",
      "parent": "/profile"
    },
    "/reserved/components/BuyContent": {
      "filePath": "reserved/components/BuyContent.tsx",
      "parent": "/reserved"
    },
    "/reserved/components/CustomerInfo": {
      "filePath": "reserved/components/CustomerInfo.tsx",
      "parent": "/reserved"
    },
    "/reserved/components/PaymentInfo": {
      "filePath": "reserved/components/PaymentInfo.tsx",
      "parent": "/reserved"
    },
    "/reserved/components/Stepper": {
      "filePath": "reserved/components/Stepper.tsx",
      "parent": "/reserved"
    },
    "/schedules/ components/DateDisp": {
      "filePath": "schedules/ components/DateDisp.tsx",
      "parent": "/schedules"
    },
    "/schedules/ components/MovieBox": {
      "filePath": "schedules/ components/MovieBox.tsx",
      "parent": "/schedules"
    },
    "/schedules/ components/ScreenData": {
      "filePath": "schedules/ components/ScreenData.tsx",
      "parent": "/schedules"
    },
    "/schedules/ components/ScreenTime": {
      "filePath": "schedules/ components/ScreenTime.tsx",
      "parent": "/schedules"
    },
    "/schedules/ components/Slideshow": {
      "filePath": "schedules/ components/Slideshow.tsx",
      "parent": "/schedules"
    },
    "/schedules/ components/TimeData": {
      "filePath": "schedules/ components/TimeData.ts",
      "parent": "/schedules"
    },
    "/schedules/ components/daliy": {
      "filePath": "schedules/ components/daliy.ts",
      "parent": "/schedules"
    },
    "/google/callback/components/LoginButton": {
      "filePath": "google/callback/components/LoginButton.tsx",
      "parent": "/google/callback"
    },
    "/google/callback/store/UserDataContext": {
      "filePath": "google/callback/store/UserDataContext.tsx",
      "parent": "/google/callback"
    },
    "/movies/$movieId/component/movie": {
      "filePath": "movies/$movieId/component/movie.tsx",
      "parent": "/movies/$movieId"
    }
  }
}
ROUTE_MANIFEST_END */
